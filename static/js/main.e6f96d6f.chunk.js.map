{"version":3,"sources":["components/LandingPage.js","actions/allTypes.js","components/AddTask.js","actions/Tasks/taskActions.js","components/TaskListItem.js","components/TaskList.js","actions/Auth/auth.action.js","components/MainTasksContent.js","Auth/Signup.js","Auth/Login.js","App.js","reportWebVitals.js","reducers/Auth/auth.reducer.js","reducers/Tasks/taskReducer.js","reducers/index.js","store.js","index.js"],"names":["LandingPage","className","to","SIGNUP_USER","SIGNIN_USER","LOGOUT_USER","ADD_TASK","DELETE_TASK","THROW_ERROR","AddTask","useState","taskName","settaskName","dispatch","useDispatch","onChange","e","target","value","type","placeholder","style","width","onClick","task","id","uuid","payload","TaskListItem","filterDisplay","length","taskId","TaskList","tasks","useSelector","filterTasks","setfilterTasks","filterResult","setfilterResult","history","useHistory","useEffect","myFilterResult","filter","filteredTask","toLowerCase","includes","token","printedUserDetails","localStorage","getItem","jwt_decode","username","removeItem","swal","title","text","icon","button","push","map","MainTasksContent","color","Signup","useForm","register","errors","formState","handleSubmit","error","registerUsers","myError","setmyError","Fragment","onSubmit","data","userData","axios","post","then","response","status","setTimeout","window","location","catch","htmlFor","required","minLength","message","border","aria-describedby","maxLength","email","password","SignIn","setItem","App","path","component","Landing","exact","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","registerUser","users","loggedUser","signupReducer","state","action","rootReducer","combineReducers","newAddTask","newTasks","newTask","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e6f96d6f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/landing.css\";\r\n\r\nconst LandingPage = () => {\r\n    return (\r\n        <div className=\"landingHeader\">\r\n            <h4 className=\"text-center welcome\">Welcome to My Task Manager App</h4>\r\n            <div className=\"landingFlex mt-4\">\r\n                <div>\r\n                    <Link to=\"/signup\" className=\"myLink\">Signup</Link>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/login\" className=\"myLink\">Login</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage;\r\n","// Users Action Types\r\nexport const SIGNUP_USER = \"SIGNUP_USER\";\r\nexport const SIGNIN_USER = \"SIGNIN_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\n\r\n// Tasks Action Types\r\nexport const ADD_TASK = \"ADD_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\n\r\n// Error Action Type\r\nexport const THROW_ERROR = \"THROW_ERROR\";","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTask } from \"../actions/Tasks/taskActions\";\r\nimport { v1 as uuid } from \"uuid\"; // Random ID generator\r\nimport \"../styles/main.css\";\r\n\r\nconst AddTask = () => {\r\n  const [taskName, settaskName] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"addTaskFlex\">\r\n      <input\r\n        onChange={(e) => settaskName(e.target.value)}\r\n        type=\"text\"\r\n        className=\"mt-3 add-task\"\r\n        placeholder=\"Add a new task\"\r\n        style={{ width: \"50%\" }}\r\n      />\r\n      <button\r\n        className=\"btn btn-primary btn-add\"\r\n        onClick={() => {\r\n          dispatch(\r\n            addTask({\r\n              id: uuid(),\r\n              taskName: taskName,\r\n            })\r\n          );\r\n          settaskName(\"\");\r\n        }}\r\n      >\r\n        Add Task\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { ADD_TASK, DELETE_TASK } from \"../allTypes\";\r\n\r\nexport const addTask = (task) => {\r\n  return {\r\n    type: ADD_TASK,\r\n    payload: task,\r\n  };\r\n};\r\n\r\nexport const deleteTask = (taskId) => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    payload: taskId,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTask } from \"../actions/Tasks/taskActions\";\r\n\r\nconst TaskListItem = ({ filterDisplay }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"task-item container\">\r\n        <span>\r\n          {filterDisplay.id.length > 1 ? filterDisplay.id[0] : filterDisplay.id}\r\n        </span>\r\n        <h5>{filterDisplay.taskName}</h5>\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={() => dispatch(deleteTask(filterDisplay.id))}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TaskListItem from \"./TaskListItem\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../styles/main.css\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logoutUser } from \"../actions/Auth/auth.action\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst TaskList = () => {\r\n  const tasks = useSelector((tasks) => tasks.tasks); // State gotten from redux\r\n  const [filterTasks, setfilterTasks] = useState(\"\");\r\n  const [filterResult, setfilterResult] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const myFilterResult = tasks.filter((filteredTask) =>\r\n      filteredTask.taskName.toLowerCase().includes(filterTasks)\r\n    );\r\n    setfilterResult(myFilterResult);\r\n  }, [tasks, filterTasks]);\r\n\r\n  // Fetch USER Details\r\n  const getUserDetails = (token) => {\r\n    var decoded = jwt_decode(token);\r\n    return decoded;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    dispatch(logoutUser());\r\n\r\n\r\n\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const printedUserDetails = getUserDetails(localStorage.getItem(\"token\"));\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <div className=\"container userData\">\r\n        <div className=\"name-data\">\r\n          <p>Name of User: {printedUserDetails.username}</p>\r\n        </div>\r\n        <div className=\"logout\">\r\n          <p className=\"btn btn-danger\" onClick={handleClick}>\r\n            Logout\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <h4 className=\"py-3\">Tasks</h4>\r\n      <div className=\"filterFlex\">\r\n        <span>\r\n          <input\r\n            type=\"text\"\r\n            className=\"filter\"\r\n            value={filterTasks}\r\n            onChange={(e) => setfilterTasks(e.target.value)}\r\n            placeholder=\"Search from the list of tasks\"\r\n          />\r\n        </span>\r\n        <span className=\"no\">Number of Tasks: {tasks.length} </span>\r\n      </div>\r\n      {filterResult.map((task) => {\r\n        return <TaskListItem key={task.id} filterDisplay={task} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import axios from \"axios\"; // Importing Axios\r\nimport swal from \"sweetalert\"; // Using Sweetalert for successful actions\r\nimport { LOGOUT_USER, SIGNIN_USER, SIGNUP_USER, THROW_ERROR } from \"../allTypes\"; // Getting the action type\r\n\r\nexport const signupUser = (userData) => (dispatch) => {\r\n  return axios\r\n    .post(\"https://todo-list-ekesolonge.herokuapp.com/api/users\", userData)\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        swal({\r\n          title: \"Congratulations!\",\r\n          text: \"You are successfully logged in!\",\r\n          icon: \"success\",\r\n          button: \"Proceed\",\r\n        });\r\n\r\n        dispatch({\r\n          type: SIGNUP_USER,\r\n          payload: response.data,\r\n        })\r\n\r\n        setTimeout(() => {\r\n          window.location = \"/login\";\r\n        }, 2000);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: THROW_ERROR,\r\n        payload: error.response\r\n      })\r\n    })\r\n};\r\n\r\nexport const signinUser = (userData) => (dispatch) => {\r\n  return axios\r\n    .post(\r\n      \"https://todo-list-ekesolonge.herokuapp.com/api/users/login\",\r\n      userData\r\n    )\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        swal({\r\n          title: \"Congratulations!\",\r\n          text: \"You are successfully logged in!\",\r\n          icon: \"success\",\r\n          button: \"Proceed\",\r\n        });\r\n\r\n        dispatch({\r\n          type: SIGNIN_USER,\r\n          payload: response.data,\r\n        })\r\n      }\r\n\r\n      setTimeout(() => {\r\n        window.location = \"/mainTasks\";\r\n      }, 2000);\r\n\r\n      localStorage.setItem(\"token\", response.data);\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: THROW_ERROR,\r\n        payload: error.response\r\n      })\r\n    })\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  localStorage.removeItem(\"token\");\r\n\r\n  swal({\r\n    title: \"Hey!\",\r\n    text: \"You are Logged out!\",\r\n    icon: \"warning\",\r\n    button: \"Proceed\",\r\n  });\r\n\r\n  dispatch({\r\n    type: LOGOUT_USER,\r\n  });\r\n};","// Component where all other components are rendered\r\nimport React from \"react\";\r\nimport AddTask from \"./AddTask\";\r\nimport TaskList from \"./TaskList\";\r\nimport \"../styles/main.css\";\r\n\r\nconst MainTasksContent = () => {\r\n  return (\r\n    <div className=\"main-content container text-center\">\r\n      <h3 className=\"mt-3\" style={{ color: \"white\" }}>User Dashboard</h3>\r\n      <AddTask />\r\n      <TaskList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainTasksContent;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\"; // React Hook Form Hooks\r\nimport { Link } from \"react-router-dom\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../styles/signup.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\"; // For Dispatching Actions\r\nimport { signupUser } from \"../actions/Auth/auth.action\";\r\n\r\n// Eye Icon for revealing password\r\n// const eye = <FontAwesomeIcon icon={faEye} />;\r\n\r\nfunction Signup() {\r\n  // Registering and Submitting Methods\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n  } = useForm();\r\n\r\n  const error = useSelector(error => error.registerUsers.error)\r\n  // const [passwordShown, setPasswordShown] = useState(false); // State for password visibility\r\n  const [myError, setmyError] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  // const togglePasswordVisiblity = () => {\r\n  //   setPasswordShown(passwordShown ? false : true);\r\n  // };\r\n\r\n  // Submit Function && resetting the input fields\r\n  const onSubmit = (data) => {\r\n    dispatch(signupUser(data));\r\n\r\n    if (error) {\r\n      setmyError(error.data)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form\r\n        className=\"mt-5 form-container\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <h2 className=\"text-center sign-up\">Sign Up</h2>\r\n        {myError ? <p className=\"errormessage\">{myError}</p> : \"\"}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n            Username\r\n          </label>\r\n          <input\r\n            {...register(\"username\", {\r\n              required: \"This field is required\",\r\n              minLength: { value: 5, message: \"Username must not be less than 5 characters\" },\r\n            })}\r\n            style={{ border: errors.username ? \"1px solid red\" : \"\" }}\r\n            className=\"form-control\"\r\n            type=\"username\"\r\n            aria-describedby=\"usernameHelp\"\r\n          />\r\n          {errors.username && (\r\n            <p className=\"errorMessage\">{errors.username.message}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n            Email Address\r\n          </label>\r\n          <input\r\n            {...register(\"email\", {\r\n              required: \"This field is required\",\r\n              maxLength: { value: 50, message: \"Exceeded the maximum words\" },\r\n            })}\r\n            style={{ border: errors.email ? \"1px solid red\" : \"\" }}\r\n            className=\"form-control\"\r\n            type=\"email\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n          {errors.email && (\r\n            <p className=\"errorMessage\">{errors.email.message}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            {...register(\"password\", {\r\n              required: \"This field is required\",\r\n              minLength: {\r\n                value: 5,\r\n                message: \"Password must not be less than 5 characters\",\r\n              },\r\n            })}\r\n            style={{ border: errors.password ? \"1px solid red\" : \"\" }}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n          {/* <i onClick={togglePasswordVisiblity}>{eye}</i> */}\r\n          {errors.password && (\r\n            <p className=\"errorMessage\">{errors.password.message}</p>\r\n          )}\r\n        </div>\r\n        <div id=\"emailHelp\" className=\"form-text\">\r\n          We'll never share your password with anyone else.\r\n        </div>\r\n        <div className=\"mb-3 mt-4\">\r\n          <div className=\"flex-2\">\r\n            Already have an account <Link to=\"/login\">Sign In</Link>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\"; // React Hook Form Hooks\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/signup.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\"; // For Dispatching Actions\r\nimport { signinUser } from \"../actions/Auth/auth.action\";\r\n\r\nfunction SignIn() {\r\n  // Registering and Submitting Methods\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n  } = useForm();\r\n\r\n  const error = useSelector(error => error.registerUsers.error);\r\n  // const [passwordShown, setPasswordShown] = useState(false); // State for password visibility\r\n  const [myError, setmyError] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  // const togglePasswordVisiblity = () => {\r\n  //   setPasswordShown(passwordShown ? false : true);\r\n  // };\r\n\r\n  // Submit Function && resetting the input fields\r\n  const onSubmit = (data) => {\r\n    if (error !== null) {\r\n      setmyError(error.data)\r\n    } else {\r\n      dispatch(signinUser(data));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form\r\n        className=\"container mt-5 form-container\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <h2 className=\"text-center sign-up\">Sign In</h2>\r\n        {myError ? <p className=\"errormessage\">{myError}</p> : \"\"}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n            Username\r\n          </label>\r\n          <input\r\n            {...register(\"username\", {\r\n              required: \"This field is required\",\r\n              maxLength: { value: 50, message: \"Exceeded the maximum words\" },\r\n            })}\r\n            style={{ border: errors.username ? \"1px solid red\" : \"\" }}\r\n            className=\"form-control\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n          {errors.username && (\r\n            <p className=\"errorMessage\">{errors.username.message}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            {...register(\"password\", {\r\n              required: \"This field is required\",\r\n              minLength: {\r\n                value: 5,\r\n                message: \"Password must not be less than 8 characters\",\r\n              },\r\n            })}\r\n            style={{ border: errors.password ? \"1px solid red\" : \"\" }}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n          {/* <i onClick={togglePasswordVisiblity}>{eye}</i> */}\r\n          {errors.password && (\r\n            <p className=\"errorMessage\">{errors.password.message}</p>\r\n          )}\r\n        </div>\r\n        <div id=\"emailHelp\" className=\"form-text\">\r\n          We'll never share your password with anyone else.\r\n        </div>\r\n        <div className=\"mb-3 mt-4\">\r\n          {/* <div className=\"flex-1\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id=\"exampleCheck1\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n              Remember me\r\n            </label>\r\n          </div> */}\r\n          <div>\r\n            Create an Account <Link to=\"/signup\">Sign Up</Link>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Sign In\r\n        </button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Landing from \"../src/components/LandingPage\";\nimport MainTasksContent from \"./components/MainTasksContent\";\nimport Signup from \"./Auth/Signup\";\nimport Login from \"./Auth/Login\"\n\nfunction App() {\n  return (\n    <div className=\"m-3\">\n      <Switch>\n        <Route path=\"/\" component={Landing} exact />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/mainTasks\" component={MainTasksContent} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { LOGOUT_USER, SIGNIN_USER, SIGNUP_USER, THROW_ERROR } from \"../../actions/allTypes\";\r\n\r\n// Initial State\r\nconst registerUser = {\r\n  users: [],\r\n  loggedUser: [],\r\n  error: null\r\n};\r\n\r\nconst signupReducer = (state = registerUser, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SIGNUP_USER:\r\n      return {\r\n        ...state,\r\n        users: [...state.users, payload],\r\n      };\r\n    case SIGNIN_USER:\r\n      return {\r\n        ...state,\r\n        loggedUser: [...state.loggedUser, payload],\r\n      };\r\n    case THROW_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        loggedUser: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default signupReducer;\r\n","// import { tasks } from \"../states\";\r\nimport { ADD_TASK, DELETE_TASK } from \"../../actions/allTypes\";\r\n\r\nconst tasks = [];\r\n\r\nexport let taskReducer = (state = tasks, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      let newAddTask = [...state];\r\n      newAddTask.push(payload);\r\n      return newAddTask;\r\n    case DELETE_TASK:\r\n      let newTasks = [...state];\r\n      newTasks = newTasks.filter((newTask) => newTask.id !== payload);\r\n      return newTasks;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport signupReducer from \"./Auth/auth.reducer\";\r\nimport { taskReducer } from \"./Tasks/taskReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  tasks: taskReducer,\r\n  registerUsers: signupReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(...middleware)\r\n    // other store enhancer\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename=\"/\">\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}